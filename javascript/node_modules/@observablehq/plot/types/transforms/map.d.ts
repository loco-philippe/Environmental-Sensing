/**
 * ```js
 * Plot.mapX("cumsum", {x: d3.randomNormal()})
 * ```
 *
 * Equivalent to Plot.map({x: *map*, x1: *map*, x2: *map*}, *options*), but
 * ignores any of **x**, **x1**, and **x2** not present in *options*.
 *
 * @link https://github.com/observablehq/plot/blob/main/README.md#map
 */
export function mapX(map: any, options?: {}): {
    transform: any;
    sort?: any;
};
/**
 * ```js
 * Plot.mapY("cumsum", {y: d3.randomNormal()})
 * ```
 *
 * Equivalent to Plot.map({y: *map*, y1: *map*, y2: *map*}, *options*), but
 * ignores any of **y**, **y1**, and **y2** not present in *options*.
 *
 * @link https://github.com/observablehq/plot/blob/main/README.md#map
 */
export function mapY(map: any, options?: {}): {
    transform: any;
    sort?: any;
};
/**
 * ```js
 * Plot.map({y: "cumsum"}, {y: d3.randomNormal()})
 * ```
 *
 * Groups on the first channel of *z*, *fill*, or *stroke*, if any, and then for
 * each channel declared in the specified *outputs* object, applies the
 * corresponding map method. Each channel in *outputs* must have a corresponding
 * input channel in *options*.
 *
 * @link https://github.com/observablehq/plot/blob/main/README.md#map
 */
export function map(outputs?: {}, options?: {}): {
    transform: any;
    sort?: any;
};
