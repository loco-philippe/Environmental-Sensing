/**
 * ```js
 * Plot.cell(simpsons, {x: "number_in_season", y: "season", fill: "imdb_rating"})
 * ```
 *
 * Returns a new cell with the given *data* and *options*. If neither the **x**
 * nor **y** options are specified, *data* is assumed to be an array of pairs
 * [[*x₀*, *y₀*], [*x₁*, *y₁*], [*x₂*, *y₂*], …] such that **x** = [*x₀*, *x₁*,
 * *x₂*, …] and **y** = [*y₀*, *y₁*, *y₂*, …].
 */
export function cell(data: any, options?: {}): Cell;
/**
 * ```js
 * Plot.cellX(simpsons.map(d => d.imdb_rating))
 * ```
 *
 * Equivalent to
 * [Plot.cell](https://github.com/observablehq/plot/blob/main/README.md#plotcelldata-options),
 * except that if the **x** option is not specified, it defaults to [0, 1, 2,
 * …], and if the **fill** option is not specified and **stroke** is not a
 * channel, the fill defaults to the identity function and assumes that *data* =
 * [*x₀*, *x₁*, *x₂*, …].
 */
export function cellX(data: any, options?: {}): Cell;
/**
 * ```js
 * Plot.cellY(simpsons.map(d => d.imdb_rating))
 * ```
 *
 * Equivalent to
 * [Plot.cell](https://github.com/observablehq/plot/blob/main/README.md#plotcelldata-options),
 * except that if the **y** option is not specified, it defaults to [0, 1, 2,
 * …], and if the **fill** option is not specified and **stroke** is not a
 * channel, the fill defaults to the identity function and assumes that *data* =
 * [*y₀*, *y₁*, *y₂*, …].
 */
export function cellY(data: any, options?: {}): Cell;
export class Cell extends AbstractBar {
    constructor(data: any, { x, y, ...options }?: {
        x: any;
        y: any;
    });
    _transform(selection: any, mark: any): void;
}
import { AbstractBar } from "./bar.js";
