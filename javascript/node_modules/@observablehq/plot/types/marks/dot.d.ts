/**
 * ```js
 * Plot.dot(sales, {x: "units", y: "fruit"})
 * ```
 *
 * Returns a new dot with the given *data* and *options*. If neither the **x**
 * nor **y** nor **frameAnchor** options are specified, *data* is assumed to be
 * an array of pairs [[*x₀*, *y₀*], [*x₁*, *y₁*], [*x₂*, *y₂*], …] such that
 * **x** = [*x₀*, *x₁*, *x₂*, …] and **y** = [*y₀*, *y₁*, *y₂*, …].
 */
export function dot(data: any, options?: {}): Dot;
/**
 * ```js
 * Plot.dotX(cars.map(d => d["economy (mpg)"]))
 * ```
 *
 * Equivalent to
 * [Plot.dot](https://github.com/observablehq/plot/blob/main/README.md#plotdotdata-options)
 * except that if the **x** option is not specified, it defaults to the identity
 * function and assumes that *data* = [*x₀*, *x₁*, *x₂*, …].
 *
 * If an **interval** is specified, such as d3.utcDay, **y** is transformed to
 * (*interval*.floor(*y*) + *interval*.offset(*interval*.floor(*y*))) / 2. If
 * the interval is specified as a number *n*, *y* will be the midpoint of two
 * consecutive multiples of *n* that bracket *y*.
 */
export function dotX(data: any, options?: {}): Dot;
/**
 * ```js
 * Plot.dotY(cars.map(d => d["economy (mpg)"]))
 * ```
 *
 * Equivalent to
 * [Plot.dot](https://github.com/observablehq/plot/blob/main/README.md#plotdotdata-options)
 * except that if the **y** option is not specified, it defaults to the identity
 * function and assumes that *data* = [*y₀*, *y₁*, *y₂*, …].
 *
 * If an **interval** is specified, such as d3.utcDay, **x** is transformed to
 * (*interval*.floor(*x*) + *interval*.offset(*interval*.floor(*x*))) / 2. If
 * the interval is specified as a number *n*, *x* will be the midpoint of two
 * consecutive multiples of *n* that bracket *x*.
 */
export function dotY(data: any, options?: {}): Dot;
/**
 * Equivalent to
 * [Plot.dot](https://github.com/observablehq/plot/blob/main/README.md#plotdotdata-options)
 * except that the **symbol** option is set to *circle*.
 */
export function circle(data: any, options: any): Dot;
/**
 * Equivalent to
 * [Plot.dot](https://github.com/observablehq/plot/blob/main/README.md#plotdotdata-options)
 * except that the **symbol** option is set to *hexagon*.
 */
export function hexagon(data: any, options: any): Dot;
export class Dot extends Mark {
    constructor(data: any, options?: {});
    r: any;
    rotate: any;
    symbol: any;
    frameAnchor: string;
    render(index: any, scales: any, channels: any, dimensions: any, context: any): any;
}
import { Mark } from "../plot.js";
