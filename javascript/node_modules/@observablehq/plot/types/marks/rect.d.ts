/**
 * ```js
 * Plot.rect(athletes, Plot.bin({fill: "count"}, {x: "weight", y: "height"}))
 * ```
 *
 * Returns a new rect with the given *data* and *options*.
 */
export function rect(data: any, options: any): Rect;
/**
 * ```js
 * Plot.rectX(athletes, Plot.binY({x: "count"}, {y: "weight"}))
 * ```
 *
 * Equivalent to
 * [Plot.rect](https://github.com/observablehq/plot/blob/main/README.md#plotrectdata-options),
 * except that if neither the **x1** nor **x2** option is specified, the **x**
 * option may be specified as shorthand to apply an implicit [stackX
 * transform](https://github.com/observablehq/plot/blob/main/README.md#plotstackxstack-options);
 * this is the typical configuration for a histogram with rects aligned at *x* =
 * 0. If the **x** option is not specified, it defaults to the identity
 * function.
 */
export function rectX(data: any, options?: {
    y: (d: any, i: any) => any;
    interval: number;
    x2: {
        transform: (d: any) => any;
    };
}): Rect;
/**
 * ```js
 * Plot.rectY(athletes, Plot.binX({y: "count"}, {x: "weight"}))
 * ```
 *
 * Equivalent to
 * [Plot.rect](https://github.com/observablehq/plot/blob/main/README.md#plotrectdata-options),
 * except that if neither the **y1** nor **y2** option is specified, the **y**
 * option may be specified as shorthand to apply an implicit [stackY
 * transform](https://github.com/observablehq/plot/blob/main/README.md#plotstackystack-options);
 * this is the typical configuration for a histogram with rects aligned at *y* =
 * 0. If the **y** option is not specified, it defaults to the identity
 * function.
 */
export function rectY(data: any, options?: {
    x: (d: any, i: any) => any;
    interval: number;
    y2: {
        transform: (d: any) => any;
    };
}): Rect;
export class Rect extends Mark {
    constructor(data: any, options?: {});
    insetTop: any;
    insetRight: any;
    insetBottom: any;
    insetLeft: any;
    rx: any;
    ry: any;
    render(index: any, scales: any, channels: any, dimensions: any, context: any): any;
}
import { Mark } from "../plot.js";
