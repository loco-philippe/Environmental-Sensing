/**
 * Draws contours representing the estimated density of the two-dimensional
 * points given by the **x** and **y** channels, and possibly weighted by the
 * **weight** channel. If either of the **x** or **y** channels are not
 * specified, the corresponding position is controlled by the **frameAnchor**
 * option.
 *
 * The **thresholds** option, which defaults to 20, specifies one more than the
 * number of contours that will be computed at uniformly-spaced intervals
 * between 0 (exclusive) and the maximum density (exclusive). The **thresholds**
 * option may also be specified as an array or iterable of explicit density
 * values. The **bandwidth** option, which defaults to 20, specifies the
 * standard deviation of the Gaussian kernel used for estimation in pixels.
 *
 * If a **z**, **stroke** or **fill** channel is specified, the input points are
 * grouped by series, and separate sets of contours are generated for each
 * series. If the **stroke** or **fill** is specified as *density*, a color
 * channel is constructed with values representing the density threshold value
 * of each contour.
 */
export function density(data: any, options?: {}): Density;
export class Density extends Mark {
    constructor(data: any, { x, y, z, weight, fill, stroke, ...options }?: {
        x: any;
        y: any;
        z: any;
        weight: any;
        fill: any;
        stroke: any;
    });
    fill: any;
    stroke: any;
    z: any;
    filter(index: any): any;
    render(index: any, scales: any, channels: any, dimensions: any, context: any): HTMLElement | HTMLCanvasElement | HTMLImageElement | SVGImageElement | HTMLVideoElement | HTMLAnchorElement | HTMLScriptElement | HTMLEmbedElement | HTMLFormElement | HTMLHeadElement | HTMLAreaElement | SVGSVGElement | HTMLObjectElement | HTMLLinkElement | HTMLMapElement | HTMLInputElement | HTMLDataElement | HTMLProgressElement | HTMLTrackElement | HTMLSourceElement | HTMLButtonElement | HTMLAudioElement | HTMLBaseElement | HTMLQuoteElement | HTMLBodyElement | HTMLBRElement | HTMLTableCaptionElement | HTMLTableColElement | HTMLDataListElement | HTMLModElement | HTMLDetailsElement | HTMLDialogElement | HTMLDivElement | HTMLDListElement | HTMLFieldSetElement | HTMLHeadingElement | HTMLHRElement | HTMLHtmlElement | HTMLIFrameElement | HTMLLabelElement | HTMLLegendElement | HTMLLIElement | HTMLMenuElement | HTMLMetaElement | HTMLMeterElement | HTMLOListElement | HTMLOptGroupElement | HTMLOptionElement | HTMLOutputElement | HTMLParagraphElement | HTMLPictureElement | HTMLPreElement | HTMLSelectElement | HTMLSlotElement | HTMLSpanElement | HTMLStyleElement | HTMLTableElement | HTMLTableSectionElement | HTMLTableCellElement | HTMLTemplateElement | HTMLTextAreaElement | HTMLTimeElement | HTMLTitleElement | HTMLTableRowElement | HTMLUListElement | SVGSymbolElement | SVGFilterElement | SVGSetElement | SVGStopElement | SVGViewElement | SVGClipPathElement | SVGMarkerElement | SVGMaskElement | SVGAnimateElement | SVGAnimateMotionElement | SVGAnimateTransformElement | SVGCircleElement | SVGDefsElement | SVGDescElement | SVGEllipseElement | SVGFEBlendElement | SVGFEColorMatrixElement | SVGFEComponentTransferElement | SVGFECompositeElement | SVGFEConvolveMatrixElement | SVGFEDiffuseLightingElement | SVGFEDisplacementMapElement | SVGFEDistantLightElement | SVGFEDropShadowElement | SVGFEFloodElement | SVGFEFuncAElement | SVGFEFuncBElement | SVGFEFuncGElement | SVGFEFuncRElement | SVGFEGaussianBlurElement | SVGFEImageElement | SVGFEMergeElement | SVGFEMergeNodeElement | SVGFEMorphologyElement | SVGFEOffsetElement | SVGFEPointLightElement | SVGFESpecularLightingElement | SVGFESpotLightElement | SVGFETileElement | SVGFETurbulenceElement | SVGForeignObjectElement | SVGGElement | SVGLineElement | SVGLinearGradientElement | SVGMetadataElement | SVGMPathElement | SVGPathElement | SVGPatternElement | SVGPolygonElement | SVGPolylineElement | SVGRadialGradientElement | SVGRectElement | SVGSwitchElement | SVGTextElement | SVGTextPathElement | SVGTSpanElement | SVGUseElement | null;
}
import { Mark } from "../plot.js";
